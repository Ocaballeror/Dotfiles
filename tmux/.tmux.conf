# Use UTF8
if-shell '[ "$(tmux -V)" != "tmux master" ] && [ $(tmux -V) | cut -d " " -f2) -lt 2.2 ]'\
	'set -q -g status-utf8 on ; set -q -g utf8 on ; set-window-option -q -g utf8 on'


# Remap prefix from '^C-B' to '^C-A'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Split panes using v and h
bind h split-window -h -c "#{pane_current_path}"
bind v split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

# Reload the config file
bind r source-file ~/.tmux.conf \; display "Reloaded"

# Switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U

# Move between panes with prefix + vim keys
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R


# Resize panes using Ctrl+arrow without prefix
bind -n C-Left resize-pane -L 2
bind -n C-Right resize-pane -R 2
bind -n C-Down resize-pane -D 2
bind -n C-Up  resize-pane -U 2

# Move panes around with Ctrl+Shift+Arrows
bind -n C-S-Left swap-pane -U
bind -n C-S-Right swap-pane -D
bind -n C-S-Down swap-pane -D
bind -n C-S-Up swap-pane -U 

# Bindings for vim's tmux-navigator
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R

# Use shift+arrow to switch between windows
unbind-key p
bind -n S-Left previous-window
bind -n S-Right next-window

# Move panes between windows
bind-key j command-prompt -p "Join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "Send pane to:" "join-pane -t '%%'"
bind-key b break-pane


# Better copy mode
bind -n PageUp copy-mode
setw -g mode-keys vi

if-shell '[ "$(tmux -V)" = "tmux master" ] || [ $(echo "$(tmux -V | cut -d " " -f2) >= 2.4" | bc -l) = 1 ]'\
	'bind-key -Tcopy-mode-vi "v" send -X begin-selection;\
	 bind-key -Tcopy-mode-vi "y" send -X copy-selection'\
\
	'bind-key -t vi-copy v begin-selection;\
	 bind-key -t vi-copy y copy-pipe "xsel --selection"'

if-shell '{ [ -f "$TMUX_DIR/plugins/tmux-yank/yank.tmux" ] && tmux run-shell "$TMUX_DIR/plugins/tmux-yank/yank.tmux"; }\
	   || { [ -f "$HOME/.tmux/plugins/tmux-yank/yank.tmux" ] && tmux run-shell "$HOME/.tmux/plugins/tmux-yank/yank.tmux"; }'\
	'display "Loaded tmux yank"'\
	'bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display "Copied to clipboard"'

# Faster commands
set -s escape-time 0

# Make messages be displayed for longer
set-option -g display-time 4000

# Enable mouse mode
if-shell '[ "$(tmux -V)" = "tmux master" ] || [ $(echo "$(tmux -V | cut -d " " -f2) >= 2.1" | bc -l) = 1 ]'\
	'set -g mouse on'\
	'set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on'

# Set mouse on with prefix m
if-shell '[ "$(tmux -V)" = "tmux master" ] || [ $(echo "$(tmux -V | cut -d " " -f2) >= 2.1" | bc -l) = 1 ]'\
	'bind m\
		set -g mouse on\;\
		display "Mouse: ON";\
	bind M\
		 set -g mouse off\;\
		 display "Mouse: OFF"'\
\
	'bind m\
		set -g mode-mouse on\;\
		set -g mouse-resize-pane on\;\
		set -g mouse-select-pane on\;\
		set -g mouse-select-window on\;\
		display "Mouse: ON";\
	bind M\
		 set -g mode-mouse off \;\
		 set -g mouse-resize-pane off \;\
		 set -g mouse-select-pane off \;\
		 set -g mouse-select-window off \;\
		 display "Mouse: OFF"'

# Zoom this pane to full screen
bind + \
     new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
     swap-pane -s tmux-zoom.0 \;\
     select-window -t tmux-zoom
# Restore this pane
bind - \
     last-window \;\
     swap-pane -s tmux-zoom.0 \;\
     kill-window -t tmux-zoom

set -g base-index 1 #Make window numbering start at 1
set -g pane-base-index 1 #Make pane numbering do the same
setw -g automatic-rename on #Auto rename the window with the running program
set -g renumber-windows on #Re-number windows when one of them is closed
set -g default-terminal "screen-256color"


#####################################################################################################################
############################################ DESIGN CHANGES #########################################################
#####################################################################################################################

#### Most of this will be overriden by powerline 

# Design changes {{{
# The modes {{{
setw -g clock-mode-colour colour135
setw -g mode-attr bold
setw -g mode-fg colour6
setw -g mode-bg colour238
#}}}

# The panes {{{
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-fg colour51
set -g pane-active-border-bg colour51
# }}}

# The statusbar {{{
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
set -g status-left ''
set -g status-interval 2
set -g status-justify left
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

# Window tabs {{{
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

setw -g window-status-current-fg colour81
setw -g window-status-current-bg colour238
setw -g window-status-current-attr bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-fg colour138
setw -g window-status-bg colour235
setw -g window-status-attr none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour255
setw -g window-status-bell-bg colour1
# }}}
# }}}

# The messages {{{
set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166
# }}}

# Powerline {{{
# This is totally a hack, but it allows me to keep everything inside this file. Basically this
# horrific line finds powerline's bindings directory and makes tmux source the correct one
run-shell '[ -z $POWERLINE_DISABLE ] || exit 0;\
powerline_root=$(python2 -c "from powerline.config import POWERLINE_ROOT; print (POWERLINE_ROOT)" 2>/dev/null);\
[ -n "$powerline_root" ] || powerline_root=$(python -c "from powerline.config import POWERLINE_ROOT; print (POWERLINE_ROOT)" 2>/dev/null);\
[ -f "$powerline_root/powerline/bindings/tmux/powerline.conf" ] && tmux source "$powerline_root/powerline/bindings/tmux/powerline.conf || true"'

# }}}
# }}}
